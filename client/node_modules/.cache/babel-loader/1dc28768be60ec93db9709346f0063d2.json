{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BASICSTUFFING\\\\Desktop\\\\PEEUSH\\\\Glixched_DocGen\\\\Glixched_DocumentGenerator\\\\client\\\\src\\\\Components\\\\Template\\\\Template.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, Typography, Button, Container, FormControl, TextField } from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TemplateGenerator = () => {\n  _s();\n\n  const [templateData, createTemplate] = useState({\n    Name: \"\",\n    CollegeName: \"\",\n    Batch: \"\",\n    Aim: \"\",\n    ExperimentNo: 0,\n    Theory: \"\",\n    Procedure: \"\",\n    Appartus: \"\",\n    Conclusion: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    style: {\n      backgroundColor: \"white\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      noValidate: true,\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"column\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          direction: \"row\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"standard-required\",\n              label: \"Your Name\",\n              onChange: e => createTemplate({ ...templateData,\n                Name: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"standard-required\",\n              label: \"College Name\",\n              onChange: e => createTemplate({ ...templateData,\n                CollegeName: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          item: true,\n          direction: \"row\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"standard-required\",\n              label: \"Branch\",\n              onChange: e => createTemplate({ ...templateData,\n                Branch: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              id: \"standard-required\",\n              label: \"Batch\",\n              onChange: e => createTemplate({ ...templateData,\n                Batch: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          sm: 8,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            id: \"standard-required\",\n            label: \"Aim\",\n            onChange: e => createTemplate({ ...templateData,\n              Aim: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-required\",\n            label: \"Experiment Number\",\n            onChange: e => createTemplate({ ...templateData,\n              ExperimentNo: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-required\",\n            label: \"Theory\",\n            onChange: e => createTemplate({ ...templateData,\n              Theory: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-required\",\n            label: \"Procedure\",\n            onChange: e => createTemplate({ ...templateData,\n              Procedure: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        size: \"medium\",\n        color: \"primary\",\n        endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 20\n        }, this),\n        type: \"Submit\",\n        onClick: e => {\n          e.preventDefault();\n          console.log(templateData);\n        },\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TemplateGenerator, \"RS+o9gpN0I/1NZB6ucaKSOs1XzE=\");\n\n_c = TemplateGenerator;\nexport default TemplateGenerator;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemplateGenerator\");","map":{"version":3,"sources":["C:/Users/BASICSTUFFING/Desktop/PEEUSH/Glixched_DocGen/Glixched_DocumentGenerator/client/src/Components/Template/Template.js"],"names":["React","useState","useEffect","Grid","Typography","Button","Container","FormControl","TextField","SendIcon","TemplateGenerator","templateData","createTemplate","Name","CollegeName","Batch","Aim","ExperimentNo","Theory","Procedure","Appartus","Conclusion","backgroundColor","e","target","value","Branch","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Container,\r\n  FormControl,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\n\r\nconst TemplateGenerator = () => {\r\n  const [templateData, createTemplate] = useState({\r\n    Name: \"\",\r\n    CollegeName: \"\",\r\n    Batch: \"\",\r\n    Aim: \"\",\r\n    ExperimentNo: 0,\r\n    Theory: \"\",\r\n    Procedure: \"\",\r\n    Appartus: \"\",\r\n    Conclusion: \"\",\r\n  });\r\n\r\n  return (\r\n    <Container style={{ backgroundColor: \"white\" }}>\r\n      <form noValidate autoComplete=\"off\">\r\n        <Grid container direction=\"column\">\r\n          <Grid container item direction=\"row\" spacing={2}>\r\n            <Grid item>\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Your Name\"\r\n                onChange={(e) =>\r\n                  createTemplate({ ...templateData, Name: e.target.value })\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"College Name\"\r\n                onChange={(e) =>\r\n                  createTemplate({\r\n                    ...templateData,\r\n                    CollegeName: e.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid container item direction=\"row\" spacing={2}>\r\n            <Grid item>\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Branch\"\r\n                onChange={(e) =>\r\n                  createTemplate({ ...templateData, Branch: e.target.value })\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <TextField\r\n                required\r\n                id=\"standard-required\"\r\n                label=\"Batch\"\r\n                onChange={(e) =>\r\n                  createTemplate({ ...templateData, Batch: e.target.value })\r\n                }\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item sm={8}>\r\n            <TextField\r\n              required\r\n              id=\"standard-required\"\r\n              label=\"Aim\"\r\n              onChange={(e) =>\r\n                createTemplate({ ...templateData, Aim: e.target.value })\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"standard-required\"\r\n              label=\"Experiment Number\"\r\n              onChange={(e) =>\r\n                createTemplate({\r\n                  ...templateData,\r\n                  ExperimentNo: e.target.value,\r\n                })\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"standard-required\"\r\n              label=\"Theory\"\r\n              onChange={(e) =>\r\n                createTemplate({ ...templateData, Theory: e.target.value })\r\n              }\r\n            />\r\n          </Grid>\r\n          <Grid item>\r\n            <TextField\r\n              id=\"standard-required\"\r\n              label=\"Procedure\"\r\n              onChange={(e) =>\r\n                createTemplate({ ...templateData, Procedure: e.target.value })\r\n              }\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        <Button\r\n          variant=\"contained\"\r\n          size=\"medium\"\r\n          color=\"primary\"\r\n          endIcon={<SendIcon />}\r\n          type=\"Submit\"\r\n          onClick={(e) => {\r\n            e.preventDefault();\r\n            console.log(templateData);\r\n          }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </form>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TemplateGenerator;\r\n"]},"metadata":{},"sourceType":"module"}